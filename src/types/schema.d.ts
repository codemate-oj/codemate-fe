/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/user/login/sms/code": {
    /**
     * 获取短信登录验证码
     * @description 通过短信登陆，支持给定用户名/手机号登录，若两个字段同时传递则优先按用户名寻找用户。
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      requestBody?: {
        content: {
          /**
           * @example {
           *   "verifyToken": "abc123",
           *   "uname": "XiaoQuQu",
           *   "phoneNumber": "13924985794"
           * }
           */
          "application/json": {
            verifyToken: string;
            /** @description uname 与 phoneNumber 至少一个不为空 */
            uname?: string;
            /** @description uname 与 phoneNumber 至少一个不为空 */
            phoneNumber?: string;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              success: boolean;
              /** @description 在登陆时需要传递的 tokenId */
              tokenId: string;
            };
          };
        };
      };
    };
  };
  "/user/register/sms": {
    /**
     * 通过手机验证码注册用户
     * @description 通过手机验证码注册用户
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** @description 请求验证码时返回的 tokenId */
            tokenId: string;
            /**
             * @description 用户输入的验证码
             * @example 123456
             */
            verifyCode: string;
            /**
             * @description 用户手机号
             * @example 13900000000
             */
            phoneNumber: string;
            /** @description 用户名 */
            username: string;
            /** @description 用户密码 */
            password: string;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              success: boolean;
              code: number;
              /** @description 注册的用户 uid */
              uid: number;
            };
          };
        };
      };
    };
  };
  "/contest": {
    /** 比赛列表 */
    get: {
      parameters: {
        query?: {
          /**
           * @description 比赛规则，直接对应rule字段，一般不使用该参数（留空）
           * @example acm
           */
          rule?: "acm" | "oi" | "homework" | "ioi" | "ledo" | "strictioi";
          /**
           * @deprecated
           * @description 只查看分配给某个小组的比赛，一般不使用该参数（留空）
           * @example groupA
           */
          group?: string;
          /**
           * @description 分页
           * @example 1
           */
          page?: number;
          /**
           * @description 逗号分隔数组，查询比赛标签
           * @example a,b,c
           */
          tags?: string;
          /**
           * @description 查询比赛状态，对应左侧筛选条件（留空则查询全部）
           * @example incoming
           */
          category?: "incoming" | "ready" | "ongoing" | "done";
          /**
           * @description 模糊搜索值（开发中）
           * @example 测试比赛
           */
          q?: string;
        };
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              /** 分页序号 */
              page: number;
              /** 页面总数 */
              tpcount: number;
              /** 查询条件 */
              qs: string;
              /**
               * 筛选规则
               * @deprecated
               * @description rule字段包含在了qs中，已废弃
               */
              rule: string;
              /** 比赛列表 */
              tdocs: components["schemas"]["ContestBase"][];
              tsdict: {
                [key: string]: Record<string, never>;
              };
              /**
               * 用户可用小组
               * @deprecated
               * @description 不会用到
               */
              groups: string;
              /**
               * 筛选组名
               * @deprecated
               * @description group包含在了qs中，已废弃
               */
              group: string;
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/p": {
    /**
     * 首页题目筛选
     * @description 支持多条件并列筛选，默认留空的情况下直接读取题库题目；
     * 由于 `config` 是yaml文本实现（hydro的狗屎设计），导致没法在filter时直接使用配置，只能在读取完成分页后再筛选，因此可能导致**每个分页元素数不等**，`lang`和`objective`这两个定义在config中的选项会受到影响，请注意
     */
    get: {
      parameters: {
        query?: {
          /**
           * @description 默认值为1，分页参数
           * @example 1
           */
          page?: number;
          /**
           * @description 默认值为system_setting.pagination.problem
           * @example 15
           */
          limit?: number;
          /**
           * @description 逗号分隔数组，不需要括号包裹，请URLEncode
           * @example [
           *   "贪心算法,动态规划"
           * ]
           */
          tags?: string[];
          /**
           * @description 指定可用于提交题目的语言【WARN：使用该选项可能导致每个分页元素数不等】
           * @example scratch
           */
          lang?: string;
          /**
           * @description 默认为false，为true时只选择客观题【WARN：使用该选项可能导致每个分页元素数不等】
           * @example true
           */
          objective?: boolean;
          /**
           * @description 用于模糊搜索文本，可以与上面的条件一起使用（支持使用qs查询，但建议使用上面的接口）
           * @example 图形化
           */
          q?: string;
          /**
           * @description 指定从某个系统题单中查询符合上述条件的题目
           * @example 66200c489cd74d3e4c931302
           */
          source?: string;
        };
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              /** 当前页 */
              page: number;
              /** 总页数 */
              pcount: number;
              /**
               * 总题目数
               * @description 当前条件下的总题目数
               */
              ppcount: number;
              /**
               * 查找结果关系
               * @description 默认为eq即可，可忽略
               * @enum {string}
               */
              pcountRelation: "eq" | "gte";
              /** 题目 */
              pdocs: {
                /**
                 * 类型
                 * @description 题目docType=10
                 * @constant
                 */
                docType: 10;
                /** @description 题目真实ID是数字 */
                docId: number;
                /**
                 * PID
                 * @description 题目外显ID可以是pid，二者都可以寻址到题目
                 */
                pid: string;
                title: string;
                nSubmit: number;
                nAccept: number;
                tag: string[];
                hidden?: boolean;
                stats?: string;
                difficulty?: number;
                config: string | components["schemas"]["ProblemConfig"];
              }[];
              /** 题目用户状态字典 */
              psdict: {
                [key: string]: Record<string, never>;
              };
              /** 查询入参 */
              qs: string;
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/domain/group/code": {
    /**
     * 导出所有激活码数据
     * @description 需要用户有**编辑域**的权限
     */
    get: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
              groups: components["schemas"]["Group"][];
              tokens: components["schemas"]["ActivationToken"][];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/user/verify": {
    /**
     * 获取实名认证信息
     * @description 获取实名认证信息
     */
    get: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
              /** 身份证号 */
              idNumber: string;
              /** 真实姓名 */
              realName: string;
              /**
               * 是否通过验证
               * @description 是否通过了API校验
               */
              verified: boolean;
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
    /**
     * 上传实名信息
     * @description 上传实名信息（身份证号和姓名），在服务端调用第三方接口验证。
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @example 110101200312133798 */
            idNumber: string;
            /** @example 张三 */
            realName: string;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
              success: boolean;
              code: number;
              idNumber: string;
              realName: string;
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/p-list": {
    /**
     * 获取所有系统题单
     * @description 以树状结构获取所有系统题单，用于首页的筛选树
     */
    get: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
              roots: components["schemas"]["SystemProblemList"][];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/logout": {
    /**
     * 用户登出
     * @description 登出
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
            };
          };
        };
        /** @description Redirect */
        "x-200:Redirect": {
          content: {
            "application/json": {
              /** 重定向的URL */
              url: string;
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/user/register/email": {
    /**
     * 通过邮箱验证码注册用户
     * @description 通过邮箱验证码注册用户
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description 请求验证码时返回的 tokenId */
            tokenId: string;
            /**
             * @description 用户输入的验证码
             * @example 123456
             */
            verifyCode: string;
            /**
             * @description 用户邮箱
             * @example 13900000000
             */
            mail: string;
            /** @description 用户名 */
            username: string;
            /** @description 用户密码 */
            password: string;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              success: boolean;
              code: number;
              /** @description 注册的用户 uid */
              uid: number;
            };
          };
        };
      };
    };
  };
  "/user/register/sms/code": {
    /**
     * 获取手机验证码
     * @description 获取手机验证码
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      requestBody?: {
        content: {
          /**
           * @example {
           *   "phoneNumber": "13900000000",
           *   "verifyToken": "123456"
           * }
           */
          "application/json": {
            phoneNumber: string;
            /** @description Recaptcha 等验证码返回的 token */
            verifyToken: string;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              success: boolean;
              code: number;
              tokenId: string;
            };
          };
        };
      };
    };
  };
  "/p-list/{tid}": {
    /**
     * 获取题单详情
     * @description 获取题单所有信息，包含内部所有题目、题目字典和是否有权限。
     */
    get: {
      parameters: {
        query?: {
          /**
           * @description 可选
           * @example 1
           */
          page?: number;
          /**
           * @description 可选
           * @example 15
           */
          pageSize?: number;
        };
        header?: {
          /** @example application/json */
          Accept?: string;
        };
        path: {
          /** @description 题单docId */
          tid: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": Record<string, never>;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
              tdoc: components["schemas"]["SystemProblemList"];
              /** @description 题目字典，用于pid查询对应的详情 */
              pdict: {
                [key: string]: Record<string, never>;
              };
              /** @description 是否有该题单的权限 */
              hasPermission: boolean;
              page: number;
              pageSize: number;
              pageCount: number;
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
    /**
     * 获取题单中上一题
     * @description 获取题单中的上一题
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
        path: {
          /** @description 题单docId */
          tid: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * @description 操作名，Hydro特有的post魔法
             * @example prev
             * @constant
             */
            operation: "prev";
            /**
             * @description 当前PID
             * @example 1
             */
            curPid: string;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
              /** @description 目标题目id */
              pid: number;
              /** @description 是否有对应题目权限 */
              access: boolean;
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/contest/{tid}": {
    /** 比赛详情 */
    get: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
        path: {
          /**
           * @description 比赛ID
           * @example 660fb4f221e13d71de96129a
           */
          tid: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              /** 比赛详情 */
              tdoc: components["schemas"]["Contest"];
              /** 用户状态 */
              tsdoc: {
                /** ObjectID */
                _id: string;
                /** @description 关联的DocID */
                docId: string;
                /** @description 关联的DocType */
                docType: number;
                /** 域ID */
                domainId: string;
                /** 用户ID */
                uid: number;
                /**
                 * 是否参加
                 * @default null
                 * @enum {integer}
                 */
                attend?: 1 | 0;
                /**
                 * 参加时间
                 * Format: date-time
                 */
                startAt?: string;
              };
              /**
               * 用户字典
               * @description 用于owner的显示
               */
              udict: {
                [key: string]: Record<string, never>;
              };
              /** 比赛相关文件 */
              files: components["schemas"]["FileInfo"][];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
    /**
     * 报名比赛
     * @description **自带实名认证**，无需手动请求
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
        path: {
          tid: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * @description 操作名，Hydro特有的post魔法
             * @example attend
             * @constant
             */
            operation: "attend";
            /**
             * @description 比赛邀请码，可选
             * @example abcde
             */
            code?: string;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Redirect */
        "x-200:Redirect": {
          content: {
            "application/json": {
              /** 重定向的URL */
              url: string;
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/user/login/sms": {
    /** 通过短信验证码登录 */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      requestBody?: {
        content: {
          /**
           * @example {
           *   "tokenId": "abc123",
           *   "verifyCode": "123456",
           *   "rememberme": true
           * }
           */
          "application/json": {
            tokenId: string;
            verifyCode: string;
            /** @description 是否保存 session */
            rememberme: boolean;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              /** @description 登录成功后重定向位置 */
              redirect: string;
            };
          };
        };
      };
    };
  };
  "/priv": {
    /**
     * 激活指定组权限
     * @description 使用激活码激活指定组权限
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * @description 操作名，Hydro特有的post魔法
             * @example activate
             * @constant
             */
            operation: "activate";
            /**
             * @description 激活码（6位）
             * @example aaaaa
             */
            code: string;
            /**
             * @description UID（留空则使用session值）
             * @example 1
             */
            uid?: number;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
              success: boolean;
              /**
               * 组名
               * @description 激活的小组名称
               */
              group: string;
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/bulletin/list": {
    /** 查询公告列表 */
    get: {
      parameters: {
        query?: {
          /**
           * @description 分页，为空时不分页
           * @example 1
           */
          page?: number;
          /**
           * @description 分页大小，默认为server.bulletin.limit
           * @example 15
           */
          limit?: number;
          /**
           * @description 筛选的标签，为空时展示全部
           * @example a,b,c
           */
          tags?: string;
        };
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/user/register/email/code": {
    /**
     * 获取邮箱验证码
     * @description 获取邮箱验证码
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      requestBody?: {
        content: {
          /**
           * @example {
           *   "mail": "user@example.com",
           *   "verifyToken": "123456"
           * }
           */
          "application/json": {
            mail: string;
            /** @description Recaptcha 等验证码返回的 token */
            verifyToken: string;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              success: boolean;
              code: number;
              tokenId: string;
            };
          };
        };
      };
    };
  };
  "/bulletin/tags": {
    /**
     * 获取可用公告标签
     * @description 获取告示栏上方的标签列表
     */
    get: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
              tags: {
                value: string;
                label: string;
              }[];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/login": {
    /**
     * 用户名&密码登录
     * @description 使用用户名和密码登录
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @example {{admin_uname}} */
            uname: string;
            /** @example {{admin_pwd}} */
            password: string;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
            };
          };
        };
        /** @description Redirect */
        "x-200:Redirect": {
          content: {
            "application/json": {
              /** 重定向的URL */
              url: string;
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/bulletin/{bid}": {
    /** 获取公告详情 */
    get: {
      parameters: {
        query?: {
          /**
           * @description 若为true则返回未渲染的markdown
           * @example true
           */
          noRender?: boolean;
        };
        header?: {
          /** @example application/json */
          Accept?: string;
        };
        path: {
          /** @description BulletinID */
          bid: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
              bdoc: {
                _id: string;
                docId: string;
                docType: number;
                domainId: string;
                owner: number;
                maintainer: number[];
                title: string;
                editor: string;
                /** @description HTML or MD */
                content: string;
                tags: string[];
                /** Format: date-time */
                createAt: string;
              };
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/contest/{tid}/problems": {
    /**
     * 获取比赛题单
     * @description 未加入、未开始的比赛会抛出错误；首次访问会被视为参加了比赛，会添加`startAt`记录
     */
    get: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
        path: {
          tid: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
  };
  "/domain/group/{gid}/code": {
    /**
     * 获取小组所有的激活码
     * @description 【要求域编辑权限】在域管理面板中编辑小组时，可以通过该接口获取特定组的激活码。
     */
    get: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
        path: {
          /** @example 660f57076cdd0d8ef6fa4349 */
          gid: string;
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
              group: components["schemas"]["Group"];
              /** @description 所有激活码 */
              tokens: string[];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
      };
    };
    /**
     * 新增激活码
     * @description 给指定小组生成指定数量的激活码
     */
    post: {
      parameters: {
        header?: {
          /** @example application/json */
          Accept?: string;
        };
        path: {
          gid: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description 激活码过期时间
             * @example 2024-04-23T12:49:00.308Z
             */
            expireAt: string;
            /**
             * @description 允许使用次数（默认为1）
             * @default 1
             * @example 1
             */
            times?: number;
            /**
             * @description 激活码所属机构名
             * @example admin
             */
            owner?: string;
            /**
             * @description 生成数量，默认为1
             * @default 1
             * @example 1
             */
            genNum?: number;
          };
        };
      };
      responses: {
        /** @description 成功 */
        200: {
          content: {
            "application/json": {
              UserContext: components["schemas"]["UserContext"];
              UiContext: components["schemas"]["UiContext"];
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": {
              /** @description 错误信息 */
              error: components["schemas"]["Error"];
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
            };
          };
        };
        /** @description Redirect */
        "x-200:Redirect": {
          content: {
            "application/json": {
              /** 重定向的URL */
              url: string;
              UiContext: components["schemas"]["UiContext"];
              UserContext: components["schemas"]["UserContext"];
              success: boolean;
              /** @description 生成的激活码 */
              data: components["schemas"]["ActivationToken"][];
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** UDict */
    UserDict: {
      [key: string]: Record<string, never>;
    };
    Contest: {
      /** @description ObjectID */
      _id: string;
      /** @description ObjectID */
      docId: string;
      /**
       * 类型
       * Format: uint32
       * @description 30=比赛 32=系统题单
       * @enum {integer}
       */
      docType: 30 | 31 | 32 | 40;
      /**
       * 开始日期
       * Format: date-time
       * @description 比赛/作业的开放日期（题单不受此影响）
       */
      beginAt: string;
      /**
       * 结束日期
       * Format: date-time
       */
      endAt: string;
      /** 参加人数 */
      attend: number;
      /** 标题 */
      title: string;
      /** 说明内容 */
      content: string;
      /**
       * 规则
       * @description 比赛规则（赛制），homework为特殊规则
       * @enum {string}
       */
      rule: "acm" | "oi" | "homework" | "ioi" | "ledo" | "strictioi";
      /** 题目 */
      pids: number[];
      /** 是否排名 */
      rated?: boolean;
      _code?: string;
      /**
       * 分配给
       * @description 若只分配给特定小组，则只有特定组有权限访问（与权限组结合）
       */
      assign?: string[];
      files?: components["schemas"]["FileInfo"][];
      allowViewCode?: boolean;
      /**
       * 锁定日期
       * Format: date-time
       * @description 仅用于比赛
       */
      lockAt?: string;
      /**
       * 是否解封
       * @description 仅用于比赛
       */
      unlocked?: boolean;
      /**
       * 自动隐藏
       * @description 不在日期内自动隐藏，仅用于比赛（schedule实现）
       */
      autoHide?: boolean;
      /** @description 仅用于比赛 */
      balloon?: {
        [key: string]: string;
      };
      /**
       * 参与者得分
       * @description 仅用于比赛
       */
      score?: {
        [key: string]: number;
      };
      /**
       * 比赛时长
       * @description 单位为小时，仅用于比赛
       */
      duration: number;
    };
    ContestStatus: {
      /** ObjectID */
      _id: string;
      /** @description 关联的DocID */
      docId: string;
      /** @description 关联的DocType */
      docType: number;
      /** 域ID */
      domainId: string;
      /** 用户ID */
      uid: number;
      /**
       * 是否参加
       * @default null
       * @enum {integer}
       */
      attend?: 1 | 0;
      /**
       * 参加时间
       * Format: date-time
       */
      startAt?: string;
      journal: {
        /** 评测记录ID */
        rid: string;
        /** 题目ID */
        pid: number;
        /**
         * 评测状态
         * @enum {integer}
         */
        status: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 20 | 21 | 22 | 30 | 31 | 32 | 33;
        score: number;
        subtasks: {
          [key: string]: {
            /** @enum {string} */
            type: "sum" | "min" | "max";
            score: number;
            /** @enum {integer} */
            status: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 20 | 21 | 22 | 30 | 31 | 32 | 33;
          };
        };
      }[];
      /** 得分 */
      score: number;
    };
    StatusBaseDoc: {
      /** ObjectID */
      _id: string;
      /** @description 关联的DocID */
      docId: string;
      /** @description 关联的DocType */
      docType: number;
      /** 域ID */
      domainId: string;
      /** 用户ID */
      uid: number;
    };
    Document: {
      _id: string;
      docId: string;
      docType: number;
      domainId: string;
      owner: number;
      maintainer: number[];
    };
    ProblemStatus: {
      _id: string;
      docId: number;
      /** @constant */
      docType: 10;
      domainId: string;
      uid: number;
      rid?: string;
      score?: number;
      status?: number;
      nSubmit?: number;
      nAccept?: number;
      star?: boolean;
    };
    Problem: {
      /**
       * 类型
       * @description 题目docType=10
       * @constant
       */
      docType: 10;
      /** @description 题目真实ID是数字 */
      docId: number;
      /**
       * PID
       * @description 题目外显ID可以是pid，二者都可以寻址到题目
       */
      pid: string;
      title: string;
      content: string;
      nSubmit: number;
      nAccept: number;
      tag: string[];
      /**
       * 数据文件
       * @description 题目数据（如输入、输出等）
       */
      data: components["schemas"]["FileInfo"][];
      /** 其他文件 */
      additional_file: components["schemas"]["FileInfo"][];
      hidden?: boolean;
      /** @description 是否为HTML格式 */
      html?: boolean;
      stats?: string;
      difficulty?: number;
      /** @description 题目用于排序的字段 */
      sort?: string;
      reference?: {
        domainId: string;
        pid: number;
      };
      assign?: string[];
      config: string | components["schemas"]["ProblemConfig"];
    };
    ProblemConfig: {
      redirect?: string[];
      count: number;
      memoryMax: number;
      memoryMin: number;
      timeMax: number;
      timeMin: number;
      langs?: string[];
      type: string;
      subType?: string;
      target?: string;
      hackable?: boolean;
    };
    SystemProblemList: {
      /**
       * 父节点
       * @description ObjectID
       */
      parent: string;
      /** 子节点数组 */
      children: string[];
      /** @description ObjectID */
      _id: string;
      /** @description ObjectID */
      docId: string;
      /**
       * 类型
       * Format: uint32
       * @description 30=比赛 32=系统题单
       * @enum {integer}
       */
      docType: 30 | 31 | 32 | 40;
      /**
       * 开始日期
       * Format: date-time
       * @description 比赛/作业的开放日期（题单不受此影响）
       */
      beginAt: string;
      /**
       * 结束日期
       * Format: date-time
       */
      endAt: string;
      /** 标题 */
      title: string;
      /** 说明内容 */
      content: string;
      /**
       * 规则
       * @description 比赛规则（赛制），homework为特殊规则
       * @enum {string}
       */
      rule: "acm" | "oi" | "homework" | "ioi" | "ledo" | "strictioi";
      /** 题目 */
      pids: number[];
      /**
       * 分配给
       * @description 若只分配给特定小组，则只有特定组有权限访问（与权限组结合）
       */
      assign?: string[];
    };
    FileInfo: {
      _id: string;
      name: string;
      size: number;
      etag: string;
      /** Format: date-time */
      lastModified: string;
    };
    ContestBase: {
      /** @description ObjectID */
      _id: string;
      /** @description ObjectID */
      docId: string;
      /**
       * 类型
       * Format: uint32
       * @description 30=比赛 32=系统题单
       * @enum {integer}
       */
      docType: 30 | 31 | 32 | 40;
      /**
       * 开始日期
       * Format: date-time
       * @description 比赛/作业的开放日期（题单不受此影响）
       */
      beginAt: string;
      /**
       * 结束日期
       * Format: date-time
       */
      endAt: string;
      /** 参加人数 */
      attend: number;
      /** 标题 */
      title: string;
      /** 说明内容 */
      content: string;
      /**
       * 规则
       * @description 比赛规则（赛制），homework为特殊规则
       * @enum {string}
       */
      rule: "acm" | "oi" | "homework" | "ioi" | "ledo" | "strictioi";
      /** 题目 */
      pids: number[];
      /** 是否排名 */
      rated?: boolean;
      _code?: string;
      /**
       * 分配给
       * @description 若只分配给特定小组，则只有特定组有权限访问（与权限组结合）
       */
      assign?: string[];
      files?: components["schemas"]["FileInfo"][];
      allowViewCode?: boolean;
      /**
       * 锁定日期
       * Format: date-time
       * @description 仅用于比赛
       */
      lockAt?: string;
      /**
       * 是否解封
       * @description 仅用于比赛
       */
      unlocked?: boolean;
      /**
       * 自动隐藏
       * @description 不在日期内自动隐藏，仅用于比赛（schedule实现）
       */
      autoHide?: boolean;
      /** @description 仅用于比赛 */
      balloon?: {
        [key: string]: string;
      };
      /**
       * 参与者得分
       * @description 仅用于比赛
       */
      score?: {
        [key: string]: number;
      };
      /**
       * 比赛时长
       * @description 单位为小时，仅用于比赛
       */
      duration: number;
      /**
       * 惩罚起始时间
       * Format: date-time
       * @description 仅用于作业
       */
      penaltySince?: string;
      /**
       * 惩罚规则
       * @description 仅用于作业
       */
      penaltyRules?: Record<string, never>;
    };
    Error: {
      /** 错误信息 */
      message: string;
      /**
       * 参数
       * @description 错误参数，一般可以填入错误信息中的模板插值占位符
       */
      params: string[];
      /**
       * 错误堆栈
       * @description 服务端的错误堆栈信息
       */
      stack: string;
    };
    Group: {
      _id: string;
      domainId: string;
      name: string;
      uids: number[];
      /**
       * 父节点
       * @description 父节点的ObjectId
       */
      parent?: string | null;
      children?: string[] | null;
      activation?: string[];
    };
    ActivationToken: {
      _id: string;
      updateIp?: string;
      updateUa?: string;
      createIp?: string;
      createUa?: string;
      createHost?: string;
      /** @description 枚举类型，激活码Type=10 */
      tokenType: number;
      /** @description 日期ISO String */
      createAt: string;
      /** @description 日期ISO String */
      updateAt?: string;
      /** @description 日期ISO String */
      expireAt: string;
    };
    User: {
      _id?: number;
      mail?: string;
      mailLower?: string;
      uname?: string;
      unameLower?: string;
      hash?: string;
      salt?: string;
      hashType?: string;
      regat?: string;
      ip?: string[];
      loginat?: string;
      loginip?: string;
      priv?: number;
      avatar?: string;
      nationality?: string;
      age?: number;
      oier?: boolean;
      nickname?: string;
    };
    Domain: {
      _id?: string;
      name?: string;
      /** @description 域名称的小写版 */
      lower?: string;
      /** @description UID */
      owner?: number;
      /** @description 系统公告 */
      bulletin?: string;
      /** @description 域内权限组定义 */
      roles?: {
        /** @description 访客权限 */
        guest?: string;
        /** @description 登录用户权限 */
        default?: string;
        [key: string]: string | undefined;
      };
      /** @description 域头像URL */
      avatar?: string;
      /** @description 允许的编程语言（逗号分隔） */
      langs?: string;
      share?: string;
      [key: string]: unknown;
    };
    UiContext: {
      /** @description 系统设置中定义，请求静态资源时前缀 */
      cdn_prefix: string;
      /** @description 系统设置中定义，服务器URL前缀 */
      url_prefix: string;
      /** @description 系统设置中定义，web socket前缀 */
      ws_prefix: string;
      domainId: string;
      domain: components["schemas"]["Domain"];
    };
    UserContext: {
      authn: boolean;
      uname: string;
      mail: string;
      gender: string;
      avatar: string;
      avatarUrl: string;
      backgroundImage: string;
      loginat: string;
      regat: string;
      fontFamily: string;
      theme: string;
      timeZone: string;
      codeLang: string;
      codeFontFamily: string;
      formatCode: boolean;
      monacoTheme: string;
      preferredEditorType: string;
      hashType: string;
      tfa: boolean;
      groups: string[];
      perm: string;
      priv: number;
      role: string;
      rpInfo: {
        key1: string;
        key2: string;
      };
      scope: string;
      domains: string[];
      pinnedDomains: string[];
      id: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
